!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-Wall -g$/;"	m
DirectoryOfThisScript	.ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f	access:public
FlagsForFile	.ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f	access:public
GetCompilationInfoForFile	.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f	access:public
IsHeaderFile	.ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f	access:public
MakeRelativePathsInFlagsAbsolute	.ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$/;"	f	access:public
OBJS	Makefile	/^OBJS=inotify_test.o inotify_utils.o event_queue.o$/;"	m
SOURCE_EXTENSIONS	.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
SRCS	Makefile	/^SRCS=inotify_test.c inotify_utils.c event_queue.c$/;"	m
__EVENT_QUEUE_H	event_queue.h	2;"	d
__INOTIFY_UTILS_H	inotify_utils.h	2;"	d
close_inotify_fd	inotify_utils.c	/^int close_inotify_fd (int fd)$/;"	f	signature:(int fd)
close_inotify_fd	inotify_utils.h	/^int close_inotify_fd (int fd);$/;"	p	signature:(int fd)
compilation_database_folder	.ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
database	.ycm_extra_conf.py	/^  database = None$/;"	v
database	.ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
event_check	inotify_utils.c	/^int event_check (int fd)$/;"	f	signature:(int fd)
event_check	inotify_utils.h	/^int event_check (int fd);$/;"	p	signature:(int fd)
flags	.ycm_extra_conf.py	/^flags = [$/;"	v
handle_event	inotify_utils.c	/^void handle_event (queue_entry_t event)$/;"	f	signature:(queue_entry_t event)
handle_event	inotify_utils.h	/^void handle_event (queue_entry_t event);$/;"	p	signature:(queue_entry_t event)
handle_events	inotify_utils.c	/^void handle_events (queue_t q)$/;"	f	signature:(queue_t q)
head	event_queue.h	/^  struct queue_entry * head;$/;"	m	struct:queue_struct	typeref:struct:queue_struct::queue_entry	access:public
ignore_wd	inotify_utils.c	/^int ignore_wd (int fd, int wd)$/;"	f	signature:(int fd, int wd)
ignore_wd	inotify_utils.h	/^int ignore_wd (int fd, int wd);$/;"	p	signature:(int fd, int wd)
inot_ev	event_queue.h	/^  struct inotify_event inot_ev;$/;"	m	struct:queue_entry	typeref:struct:queue_entry::inotify_event	access:public
keep_running	inotify_test.c	/^int keep_running;$/;"	v
main	inotify_test.c	/^int main (int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
next_ptr	event_queue.h	/^  struct queue_entry * next_ptr;   \/* Pointer to next entry *\/$/;"	m	struct:queue_entry	typeref:struct:queue_entry::queue_entry	access:public
open_inotify_fd	inotify_utils.c	/^int open_inotify_fd ()$/;"	f
open_inotify_fd	inotify_utils.h	/^int open_inotify_fd ();$/;"	p	signature:()
os	.ycm_extra_conf.py	/^import os$/;"	i
process_inotify_events	inotify_utils.c	/^int process_inotify_events (queue_t q, int fd)$/;"	f	signature:(queue_t q, int fd)
process_inotify_events	inotify_utils.h	/^int process_inotify_events (queue_t q, int fd);$/;"	p	signature:(queue_t q, int fd)
queue_create	event_queue.c	/^queue_t queue_create ()$/;"	f
queue_create	event_queue.h	/^queue_t queue_create ();$/;"	p	signature:()
queue_dequeue	event_queue.c	/^queue_entry_t  queue_dequeue (queue_t q)$/;"	f	signature:(queue_t q)
queue_dequeue	event_queue.h	/^queue_entry_t queue_dequeue (queue_t q);$/;"	p	signature:(queue_t q)
queue_destroy	event_queue.c	/^void queue_destroy (queue_t q)$/;"	f	signature:(queue_t q)
queue_destroy	event_queue.h	/^void queue_destroy (queue_t q);$/;"	p	signature:(queue_t q)
queue_empty	event_queue.c	/^int queue_empty (queue_t q)$/;"	f	signature:(queue_t q)
queue_empty	event_queue.h	/^int queue_empty (queue_t q);$/;"	p	signature:(queue_t q)
queue_enqueue	event_queue.c	/^void queue_enqueue (queue_entry_t d, queue_t q)$/;"	f	signature:(queue_entry_t d, queue_t q)
queue_enqueue	event_queue.h	/^void queue_enqueue (queue_entry_t d, queue_t q);$/;"	p	signature:(queue_entry_t d, queue_t q)
queue_entry	event_queue.h	/^struct queue_entry$/;"	s
queue_entry::inot_ev	event_queue.h	/^  struct inotify_event inot_ev;$/;"	m	struct:queue_entry	typeref:struct:queue_entry::inotify_event	access:public
queue_entry::next_ptr	event_queue.h	/^  struct queue_entry * next_ptr;   \/* Pointer to next entry *\/$/;"	m	struct:queue_entry	typeref:struct:queue_entry::queue_entry	access:public
queue_entry_t	event_queue.h	/^typedef struct queue_entry * queue_entry_t;$/;"	t	typeref:struct:queue_entry
queue_struct	event_queue.h	/^struct queue_struct$/;"	s
queue_struct::head	event_queue.h	/^  struct queue_entry * head;$/;"	m	struct:queue_struct	typeref:struct:queue_struct::queue_entry	access:public
queue_struct::tail	event_queue.h	/^  struct queue_entry * tail;$/;"	m	struct:queue_struct	typeref:struct:queue_struct::queue_entry	access:public
queue_t	event_queue.h	/^typedef struct queue_struct *queue_t;$/;"	t	typeref:struct:queue_struct
read_event	inotify_utils.h	/^int read_event (int fd, struct inotify_event *event);$/;"	p	signature:(int fd, struct inotify_event *event)
read_events	inotify_utils.c	/^int read_events (queue_t q, int fd)$/;"	f	signature:(queue_t q, int fd)
signal_handler	inotify_test.c	/^void signal_handler (int signum)$/;"	f	signature:(int signum)
tail	event_queue.h	/^  struct queue_entry * tail;$/;"	m	struct:queue_struct	typeref:struct:queue_struct::queue_entry	access:public
watch_dir	inotify_utils.c	/^int watch_dir (int fd, const char *dirname, unsigned long mask)$/;"	f	signature:(int fd, const char *dirname, unsigned long mask)
watch_dir	inotify_utils.h	/^int watch_dir (int fd, const char *dirname, unsigned long mask);$/;"	p	signature:(int fd, const char *dirname, unsigned long mask)
watched_items	inotify_utils.c	/^static int watched_items;$/;"	v	file:
ycm_core	.ycm_extra_conf.py	/^import ycm_core$/;"	i
